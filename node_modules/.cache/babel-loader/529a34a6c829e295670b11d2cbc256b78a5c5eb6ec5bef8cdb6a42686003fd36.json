{"ast":null,"code":"import { api } from \"../../config/api\";\nimport { CREATE_STORY_FAILURE, CREATE_STORY_SUCCESS, DELETE_STORY_FAILURE, DELETE_STORY_SUCCESS, GET_STORY_FAILURE, GET_STORY_SUCCESS } from \"./ActionType\";\nexport const createStory = storyData => async dispatch => {\n  try {\n    const formData = new FormData();\n    formData.append(\"file\", storyData.file);\n    formData.append(\"content\", storyData.content);\n    const {\n      data\n    } = await api.post(`/api/story/create`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    });\n    console.log(\"Create Story:\", data);\n    dispatch({\n      type: CREATE_STORY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: CREATE_STORY_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const getStoryById = storyId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.get(`/api/story/${storyId}`);\n    dispatch({\n      type: GET_STORY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: GET_STORY_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const deleteStory = storyId => async dispatch => {\n  try {\n    await api.delete(`/api/story/${storyId}`);\n    console.log(\"Story deleted successfully\");\n    dispatch({\n      type: DELETE_STORY_SUCCESS,\n      payload: storyId\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: DELETE_STORY_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["api","CREATE_STORY_FAILURE","CREATE_STORY_SUCCESS","DELETE_STORY_FAILURE","DELETE_STORY_SUCCESS","GET_STORY_FAILURE","GET_STORY_SUCCESS","createStory","storyData","dispatch","formData","FormData","append","file","content","data","post","headers","localStorage","getItem","console","log","type","payload","error","message","getStoryById","storyId","get","deleteStory","delete"],"sources":["D:/WEB/social/social-react/src/Store/Story/Action.js"],"sourcesContent":["import { api } from \"../../config/api\";\r\nimport { CREATE_STORY_FAILURE, CREATE_STORY_SUCCESS, DELETE_STORY_FAILURE, DELETE_STORY_SUCCESS, GET_STORY_FAILURE, GET_STORY_SUCCESS } from \"./ActionType\";\r\n\r\n\r\nexport const createStory = (storyData) => async (dispatch) => {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", storyData.file);\r\n        formData.append(\"content\", storyData.content);\r\n\r\n        const { data } = await api.post(`/api/story/create`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n            },\r\n        });\r\n\r\n        console.log(\"Create Story:\", data);\r\n        dispatch({ type: CREATE_STORY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: CREATE_STORY_FAILURE, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const getStoryById = (storyId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.get(`/api/story/${storyId}`);\r\n        dispatch({ type: GET_STORY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: GET_STORY_FAILURE, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const deleteStory = (storyId) => async (dispatch) => {\r\n    try {\r\n        await api.delete(`/api/story/${storyId}`);\r\n        console.log(\"Story deleted successfully\");\r\n        dispatch({ type: DELETE_STORY_SUCCESS, payload: storyId });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: DELETE_STORY_FAILURE, payload: error.message });\r\n    }\r\n};\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,oBAAoB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,cAAc;AAG3J,OAAO,MAAMC,WAAW,GAAIC,SAAS,IAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,SAAS,CAACK,IAAI,CAAC;IACvCH,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEJ,SAAS,CAACM,OAAO,CAAC;IAE7C,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,mBAAmB,EAAEN,QAAQ,EAAE;MAC3DO,OAAO,EAAE;QACL,cAAc,EAAE,qBAAqB;QACrC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;MAC1D;IACJ,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEN,IAAI,CAAC;IAClCN,QAAQ,CAAC;MAAEa,IAAI,EAAEpB,oBAAoB;MAAEqB,OAAO,EAAER;IAAK,CAAC,CAAC;EAC3D,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IAClBf,QAAQ,CAAC;MAAEa,IAAI,EAAErB,oBAAoB;MAAEsB,OAAO,EAAEC,KAAK,CAACC;IAAQ,CAAC,CAAC;EACpE;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,OAAO,IAAK,MAAOlB,QAAQ,IAAK;EACzD,IAAI;IACA,MAAM;MAAEM;IAAK,CAAC,GAAG,MAAMf,GAAG,CAAC4B,GAAG,CAAC,cAAcD,OAAO,EAAE,CAAC;IACvDlB,QAAQ,CAAC;MAAEa,IAAI,EAAEhB,iBAAiB;MAAEiB,OAAO,EAAER;IAAK,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IAClBf,QAAQ,CAAC;MAAEa,IAAI,EAAEjB,iBAAiB;MAAEkB,OAAO,EAAEC,KAAK,CAACC;IAAQ,CAAC,CAAC;EACjE;AACJ,CAAC;AAED,OAAO,MAAMI,WAAW,GAAIF,OAAO,IAAK,MAAOlB,QAAQ,IAAK;EACxD,IAAI;IACA,MAAMT,GAAG,CAAC8B,MAAM,CAAC,cAAcH,OAAO,EAAE,CAAC;IACzCP,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzCZ,QAAQ,CAAC;MAAEa,IAAI,EAAElB,oBAAoB;MAAEmB,OAAO,EAAEI;IAAQ,CAAC,CAAC;EAC9D,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IAClBf,QAAQ,CAAC;MAAEa,IAAI,EAAEnB,oBAAoB;MAAEoB,OAAO,EAAEC,KAAK,CAACC;IAAQ,CAAC,CAAC;EACpE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}