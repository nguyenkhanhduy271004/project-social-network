{"ast":null,"code":"const API_URL = \"/api/story\";\nexport const createStory = (formData, token) => async dispatch => {\n  try {\n    dispatch({\n      type: CREATE_STORY_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Authorization\": token,\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${API_URL}/create`, formData, config);\n    dispatch({\n      type: CREATE_STORY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch({\n      type: CREATE_STORY_FAILURE,\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Something went wrong\"\n    });\n  }\n};\nexport const getStoryById = (storyId, token) => async dispatch => {\n  try {\n    dispatch({\n      type: GET_STORY_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Authorization\": token\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${API_URL}/${storyId}`, config);\n    dispatch({\n      type: GET_STORY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    dispatch({\n      type: GET_STORY_FAILURE,\n      payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Story not found\"\n    });\n  }\n};\nexport const deleteStory = (storyId, token) => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_STORY_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Authorization\": token\n      }\n    };\n    await axios.delete(`${API_URL}/${storyId}`, config);\n    dispatch({\n      type: DELETE_STORY_SUCCESS,\n      payload: storyId\n    });\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    dispatch({\n      type: DELETE_STORY_FAILURE,\n      payload: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Failed to delete story\"\n    });\n  }\n};","map":{"version":3,"names":["API_URL","createStory","formData","token","dispatch","type","CREATE_STORY_REQUEST","config","headers","data","axios","post","CREATE_STORY_SUCCESS","payload","error","_error$response","_error$response$data","CREATE_STORY_FAILURE","response","message","getStoryById","storyId","GET_STORY_REQUEST","get","GET_STORY_SUCCESS","_error$response2","_error$response2$data","GET_STORY_FAILURE","deleteStory","DELETE_STORY_REQUEST","delete","DELETE_STORY_SUCCESS","_error$response3","_error$response3$data","DELETE_STORY_FAILURE"],"sources":["D:/WEB/social/social-react/src/Store/Story/Action.js"],"sourcesContent":["const API_URL = \"/api/story\";\r\n\r\nexport const createStory = (formData, token) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_STORY_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Authorization\": token,\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post(`${API_URL}/create`, formData, config);\r\n\r\n        dispatch({ type: CREATE_STORY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_STORY_FAILURE,\r\n            payload: error.response?.data?.message || \"Something went wrong\",\r\n        });\r\n    }\r\n};\r\n\r\nexport const getStoryById = (storyId, token) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_STORY_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Authorization\": token,\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`${API_URL}/${storyId}`, config);\r\n\r\n        dispatch({ type: GET_STORY_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_STORY_FAILURE,\r\n            payload: error.response?.data?.message || \"Story not found\",\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteStory = (storyId, token) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: DELETE_STORY_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Authorization\": token,\r\n            }\r\n        };\r\n\r\n        await axios.delete(`${API_URL}/${storyId}`, config);\r\n\r\n        dispatch({ type: DELETE_STORY_SUCCESS, payload: storyId });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_STORY_FAILURE,\r\n            payload: error.response?.data?.message || \"Failed to delete story\",\r\n        });\r\n    }\r\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,YAAY;AAE5B,OAAO,MAAMC,WAAW,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK,MAAOC,QAAQ,IAAK;EAChE,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEC;IAAqB,CAAC,CAAC;IAExC,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,eAAe,EAAEL,KAAK;QACtB,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAM;MAAEM;IAAK,CAAC,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,GAAGX,OAAO,SAAS,EAAEE,QAAQ,EAAEK,MAAM,CAAC;IAExEH,QAAQ,CAAC;MAAEC,IAAI,EAAEO,oBAAoB;MAAEC,OAAO,EAAEJ;IAAK,CAAC,CAAC;EAC3D,CAAC,CAAC,OAAOK,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACZZ,QAAQ,CAAC;MACLC,IAAI,EAAEY,oBAAoB;MAC1BJ,OAAO,EAAE,EAAAE,eAAA,GAAAD,KAAK,CAACI,QAAQ,cAAAH,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBN,IAAI,cAAAO,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI;IAC9C,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAACC,OAAO,EAAElB,KAAK,KAAK,MAAOC,QAAQ,IAAK;EAChE,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEiB;IAAkB,CAAC,CAAC;IAErC,MAAMf,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,eAAe,EAAEL;MACrB;IACJ,CAAC;IAED,MAAM;MAAEM;IAAK,CAAC,GAAG,MAAMC,KAAK,CAACa,GAAG,CAAC,GAAGvB,OAAO,IAAIqB,OAAO,EAAE,EAAEd,MAAM,CAAC;IAEjEH,QAAQ,CAAC;MAAEC,IAAI,EAAEmB,iBAAiB;MAAEX,OAAO,EAAEJ;IAAK,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOK,KAAK,EAAE;IAAA,IAAAW,gBAAA,EAAAC,qBAAA;IACZtB,QAAQ,CAAC;MACLC,IAAI,EAAEsB,iBAAiB;MACvBd,OAAO,EAAE,EAAAY,gBAAA,GAAAX,KAAK,CAACI,QAAQ,cAAAO,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhB,IAAI,cAAAiB,qBAAA,uBAApBA,qBAAA,CAAsBP,OAAO,KAAI;IAC9C,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMS,WAAW,GAAGA,CAACP,OAAO,EAAElB,KAAK,KAAK,MAAOC,QAAQ,IAAK;EAC/D,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEwB;IAAqB,CAAC,CAAC;IAExC,MAAMtB,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,eAAe,EAAEL;MACrB;IACJ,CAAC;IAED,MAAMO,KAAK,CAACoB,MAAM,CAAC,GAAG9B,OAAO,IAAIqB,OAAO,EAAE,EAAEd,MAAM,CAAC;IAEnDH,QAAQ,CAAC;MAAEC,IAAI,EAAE0B,oBAAoB;MAAElB,OAAO,EAAEQ;IAAQ,CAAC,CAAC;EAC9D,CAAC,CAAC,OAAOP,KAAK,EAAE;IAAA,IAAAkB,gBAAA,EAAAC,qBAAA;IACZ7B,QAAQ,CAAC;MACLC,IAAI,EAAE6B,oBAAoB;MAC1BrB,OAAO,EAAE,EAAAmB,gBAAA,GAAAlB,KAAK,CAACI,QAAQ,cAAAc,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBvB,IAAI,cAAAwB,qBAAA,uBAApBA,qBAAA,CAAsBd,OAAO,KAAI;IAC9C,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}