{"ast":null,"code":"import { api } from \"../../config/api\";\nimport { GET_GROUPS_SUCCESS, GET_GROUPS_FAILURE, GET_GROUP_BY_ID_SUCCESS, GET_GROUP_BY_ID_FAILURE, CREATE_GROUP_SUCCESS, CREATE_GROUP_FAILURE, UPDATE_GROUP_SUCCESS, UPDATE_GROUP_FAILURE, DELETE_GROUP_SUCCESS, DELETE_GROUP_FAILURE, JOIN_GROUP_SUCCESS, JOIN_GROUP_FAILURE, LEAVE_GROUP_SUCCESS, LEAVE_GROUP_FAILURE, REMOVE_MEMBER_SUCCESS, REMOVE_MEMBER_FAILURE, CREATE_POST_SUCCESS, CREATE_POST_FAILURE } from \"./ActionType.js\";\nexport const getGroups = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.get(`/api/groups`);\n    dispatch({\n      type: GET_GROUPS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: GET_GROUPS_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const getGroupById = groupId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.get(`/api/groups/${groupId}`);\n    dispatch({\n      type: GET_GROUP_BY_ID_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: GET_GROUP_BY_ID_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const createGroup = groupData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.post(`/api/groups`, groupData);\n    dispatch({\n      type: CREATE_GROUP_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: CREATE_GROUP_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const updateGroup = (groupId, updateData) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.put(`/api/groups/${groupId}`, updateData);\n    dispatch({\n      type: UPDATE_GROUP_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: UPDATE_GROUP_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const deleteGroup = groupId => async dispatch => {\n  try {\n    await api.delete(`/api/groups/${groupId}`);\n    dispatch({\n      type: DELETE_GROUP_SUCCESS,\n      payload: groupId\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: DELETE_GROUP_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const joinGroup = groupId => async dispatch => {\n  try {\n    await api.post(`/api/groups/${groupId}/join`);\n    dispatch({\n      type: JOIN_GROUP_SUCCESS,\n      payload: groupId\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: JOIN_GROUP_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const leaveGroup = groupId => async dispatch => {\n  try {\n    await api.post(`/api/groups/${groupId}/leave`);\n    dispatch({\n      type: LEAVE_GROUP_SUCCESS,\n      payload: groupId\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: LEAVE_GROUP_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const removeMember = (groupId, memberId) => async dispatch => {\n  try {\n    await api.delete(`/api/groups/${groupId}/members/${memberId}`);\n    dispatch({\n      type: REMOVE_MEMBER_SUCCESS,\n      payload: {\n        groupId,\n        memberId\n      }\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: REMOVE_MEMBER_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const createPostInGroup = (groupId, postData) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.post(`/api/groups/${groupId}/posts`, postData);\n    dispatch({\n      type: CREATE_POST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: CREATE_POST_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["api","GET_GROUPS_SUCCESS","GET_GROUPS_FAILURE","GET_GROUP_BY_ID_SUCCESS","GET_GROUP_BY_ID_FAILURE","CREATE_GROUP_SUCCESS","CREATE_GROUP_FAILURE","UPDATE_GROUP_SUCCESS","UPDATE_GROUP_FAILURE","DELETE_GROUP_SUCCESS","DELETE_GROUP_FAILURE","JOIN_GROUP_SUCCESS","JOIN_GROUP_FAILURE","LEAVE_GROUP_SUCCESS","LEAVE_GROUP_FAILURE","REMOVE_MEMBER_SUCCESS","REMOVE_MEMBER_FAILURE","CREATE_POST_SUCCESS","CREATE_POST_FAILURE","getGroups","dispatch","data","get","type","payload","error","console","log","message","getGroupById","groupId","createGroup","groupData","post","updateGroup","updateData","put","deleteGroup","delete","joinGroup","leaveGroup","removeMember","memberId","createPostInGroup","postData"],"sources":["D:/WEB/social/social-react/src/Store/Group/Action.js"],"sourcesContent":["import { api } from \"../../config/api\";\r\nimport {\r\n    GET_GROUPS_SUCCESS, GET_GROUPS_FAILURE,\r\n    GET_GROUP_BY_ID_SUCCESS, GET_GROUP_BY_ID_FAILURE,\r\n    CREATE_GROUP_SUCCESS, CREATE_GROUP_FAILURE,\r\n    UPDATE_GROUP_SUCCESS, UPDATE_GROUP_FAILURE,\r\n    DELETE_GROUP_SUCCESS, DELETE_GROUP_FAILURE,\r\n    JOIN_GROUP_SUCCESS, JOIN_GROUP_FAILURE,\r\n    LEAVE_GROUP_SUCCESS, LEAVE_GROUP_FAILURE,\r\n    REMOVE_MEMBER_SUCCESS, REMOVE_MEMBER_FAILURE,\r\n    CREATE_POST_SUCCESS, CREATE_POST_FAILURE\r\n} from \"./ActionType.js\";\r\n\r\nexport const getGroups = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.get(`/api/groups`);\r\n        dispatch({ type: GET_GROUPS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: GET_GROUPS_FAILURE, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const getGroupById = (groupId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.get(`/api/groups/${groupId}`);\r\n        dispatch({ type: GET_GROUP_BY_ID_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: GET_GROUP_BY_ID_FAILURE, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const createGroup = (groupData) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.post(`/api/groups`, groupData);\r\n        dispatch({ type: CREATE_GROUP_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: CREATE_GROUP_FAILURE, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const updateGroup = (groupId, updateData) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.put(`/api/groups/${groupId}`, updateData);\r\n        dispatch({ type: UPDATE_GROUP_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: UPDATE_GROUP_FAILURE, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const deleteGroup = (groupId) => async (dispatch) => {\r\n    try {\r\n        await api.delete(`/api/groups/${groupId}`);\r\n        dispatch({ type: DELETE_GROUP_SUCCESS, payload: groupId });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: DELETE_GROUP_FAILURE, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const joinGroup = (groupId) => async (dispatch) => {\r\n    try {\r\n        await api.post(`/api/groups/${groupId}/join`);\r\n        dispatch({ type: JOIN_GROUP_SUCCESS, payload: groupId });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: JOIN_GROUP_FAILURE, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const leaveGroup = (groupId) => async (dispatch) => {\r\n    try {\r\n        await api.post(`/api/groups/${groupId}/leave`);\r\n        dispatch({ type: LEAVE_GROUP_SUCCESS, payload: groupId });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: LEAVE_GROUP_FAILURE, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const removeMember = (groupId, memberId) => async (dispatch) => {\r\n    try {\r\n        await api.delete(`/api/groups/${groupId}/members/${memberId}`);\r\n        dispatch({ type: REMOVE_MEMBER_SUCCESS, payload: { groupId, memberId } });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: REMOVE_MEMBER_FAILURE, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const createPostInGroup = (groupId, postData) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.post(`/api/groups/${groupId}/posts`, postData);\r\n        dispatch({ type: CREATE_POST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: CREATE_POST_FAILURE, payload: error.message });\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}