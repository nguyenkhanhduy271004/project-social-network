{"ast":null,"code":"import { SEND_MESSAGE_REQUEST, SEND_MESSAGE_SUCCESS, SEND_MESSAGE_FAILURE, GET_HISTORY_MESSAGE_REQUEST, GET_HISTORY_MESSAGE_SUCCESS, GET_HISTORY_MESSAGE_FAILURE } from \"./ActionType\";\nconst initialState = {\n  loading: false,\n  messages: [],\n  users: [],\n  error: null\n};\nexport const chatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SEND_MESSAGE_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case SEND_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        messages: [...state.messages, action.payload]\n      };\n    case SEND_MESSAGE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case GET_HISTORY_MESSAGE_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_HISTORY_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        messages: action.payload\n      };\n    case GET_HISTORY_MESSAGE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case GET_HISTORY_MESSAGE_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case GET_HISTORY_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        messages: action.payload\n      };\n    case GET_HISTORY_MESSAGE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["SEND_MESSAGE_REQUEST","SEND_MESSAGE_SUCCESS","SEND_MESSAGE_FAILURE","GET_HISTORY_MESSAGE_REQUEST","GET_HISTORY_MESSAGE_SUCCESS","GET_HISTORY_MESSAGE_FAILURE","initialState","loading","messages","users","error","chatReducer","state","action","type","payload"],"sources":["D:/WEB/social/social-react/src/Store/Chat/Reducer.js"],"sourcesContent":["import { SEND_MESSAGE_REQUEST, SEND_MESSAGE_SUCCESS, SEND_MESSAGE_FAILURE, GET_HISTORY_MESSAGE_REQUEST, GET_HISTORY_MESSAGE_SUCCESS, GET_HISTORY_MESSAGE_FAILURE } from \"./ActionType\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    messages: [],\r\n    users: [],\r\n    error: null\r\n};\r\n\r\nexport const chatReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n\r\n        case SEND_MESSAGE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                messages: [...state.messages, action.payload]\r\n            };\r\n\r\n        case SEND_MESSAGE_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n\r\n        case GET_HISTORY_MESSAGE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n\r\n        case GET_HISTORY_MESSAGE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                messages: action.payload\r\n            };\r\n\r\n        case GET_HISTORY_MESSAGE_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case GET_HISTORY_MESSAGE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n\r\n        case GET_HISTORY_MESSAGE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                messages: action.payload\r\n            };\r\n\r\n        case GET_HISTORY_MESSAGE_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n"],"mappings":"AAAA,SAASA,oBAAoB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,2BAA2B,EAAEC,2BAA2B,EAAEC,2BAA2B,QAAQ,cAAc;AAEtL,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EACzD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKd,oBAAoB;MACrB,OAAO;QACH,GAAGY,KAAK;QACRL,OAAO,EAAE;MACb,CAAC;IAEL,KAAKN,oBAAoB;MACrB,OAAO;QACH,GAAGW,KAAK;QACRL,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAQ,EAAEK,MAAM,CAACE,OAAO;MAChD,CAAC;IAEL,KAAKb,oBAAoB;MACrB,OAAO;QACH,GAAGU,KAAK;QACRL,OAAO,EAAE,KAAK;QACdG,KAAK,EAAEG,MAAM,CAACE;MAClB,CAAC;IAEL,KAAKZ,2BAA2B;MAC5B,OAAO;QACH,GAAGS,KAAK;QACRL,OAAO,EAAE;MACb,CAAC;IAEL,KAAKH,2BAA2B;MAC5B,OAAO;QACH,GAAGQ,KAAK;QACRL,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAEK,MAAM,CAACE;MACrB,CAAC;IAEL,KAAKV,2BAA2B;MAC5B,OAAO;QACH,GAAGO,KAAK;QACRL,OAAO,EAAE,KAAK;QACdG,KAAK,EAAEG,MAAM,CAACE;MAClB,CAAC;IACL,KAAKZ,2BAA2B;MAC5B,OAAO;QACH,GAAGS,KAAK;QACRL,OAAO,EAAE;MACb,CAAC;IAEL,KAAKH,2BAA2B;MAC5B,OAAO;QACH,GAAGQ,KAAK;QACRL,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAEK,MAAM,CAACE;MACrB,CAAC;IAEL,KAAKV,2BAA2B;MAC5B,OAAO;QACH,GAAGO,KAAK;QACRL,OAAO,EAAE,KAAK;QACdG,KAAK,EAAEG,MAAM,CAACE;MAClB,CAAC;IACL;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}