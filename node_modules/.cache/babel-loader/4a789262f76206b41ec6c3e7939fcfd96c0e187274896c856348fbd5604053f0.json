{"ast":null,"code":"import { FIND_POST_BY_ID_FAILURE, FIND_POST_BY_ID_SUCCESS, GET_ALL_POSTS_FAILURE, GET_ALL_POSTS_SUCCESS, GET_USER_POSTS_FAILURE, GET_USER_POSTS_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_SUCCESS, POST_CREATE_FAILURE, POST_CREATE_SUCCESS, POST_DELETE_FAILURE, POST_DELETE_SUCCESS, REPLY_POST_FAILURE, REPLY_POST_SUCCESS, RPOST_FAILURE, RPOST_SUCCESS, USER_LIKE_POST_FAILURE, USER_LIKE_POST_SUCCESS } from \"./ActionType\";\nexport const getAllPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.get(\"/api/posts/\");\n    console.log(\"Get all posts\", data);\n    dispatch({\n      type: GET_ALL_POSTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: GET_ALL_POSTS_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const getUsersPost = userId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.get(`/api/posts/user/${userId}`);\n    console.log(\"Get all posts\", data);\n    dispatch({\n      type: GET_USER_POSTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: GET_USER_POSTS_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const findPostsByLikeContainUser = userId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.get(`/api/posts/user/${userId}/likes`);\n    console.log(\"Get all posts\", data);\n    dispatch({\n      type: USER_LIKE_POST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_LIKE_POST_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const findPostsById = postId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.get(`/api/posts/${postId}`);\n    console.log(\"Get all posts\", data);\n    dispatch({\n      type: FIND_POST_BY_ID_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: FIND_POST_BY_ID_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const createPost = postData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.post(`/api/posts/create`, postData);\n    console.log(\"Get all posts\", data);\n    dispatch({\n      type: POST_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: POST_CREATE_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const createPostReply = postData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.post(`/api/posts/reply`, postData);\n    console.log(\"Get all posts\", data);\n    dispatch({\n      type: REPLY_POST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: REPLY_POST_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const createRePost = postId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.post(`/api/posts/${postId}/repost`);\n    console.log(\"Get all posts\", data);\n    dispatch({\n      type: RPOST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: RPOST_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const likePost = postId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.post(`/api/${postId}/like`);\n    console.log(\"Get all posts\", data);\n    dispatch({\n      type: LIKE_POST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: LIKE_POST_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const deletePost = postId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.post(`/api/post/${postId}`);\n    console.log(\"Get all posts\", data);\n    dispatch({\n      type: POST_DELETE_SUCCESS,\n      payload: postId\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: POST_DELETE_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["FIND_POST_BY_ID_FAILURE","FIND_POST_BY_ID_SUCCESS","GET_ALL_POSTS_FAILURE","GET_ALL_POSTS_SUCCESS","GET_USER_POSTS_FAILURE","GET_USER_POSTS_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_SUCCESS","POST_CREATE_FAILURE","POST_CREATE_SUCCESS","POST_DELETE_FAILURE","POST_DELETE_SUCCESS","REPLY_POST_FAILURE","REPLY_POST_SUCCESS","RPOST_FAILURE","RPOST_SUCCESS","USER_LIKE_POST_FAILURE","USER_LIKE_POST_SUCCESS","getAllPosts","dispatch","data","api","get","console","log","type","payload","error","message","getUsersPost","userId","findPostsByLikeContainUser","findPostsById","postId","createPost","postData","post","createPostReply","createRePost","likePost","deletePost"],"sources":["D:/WEB/social/social-react/src/Store/Post/Action.js"],"sourcesContent":["import { FIND_POST_BY_ID_FAILURE, FIND_POST_BY_ID_SUCCESS, GET_ALL_POSTS_FAILURE, GET_ALL_POSTS_SUCCESS, GET_USER_POSTS_FAILURE, GET_USER_POSTS_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_SUCCESS, POST_CREATE_FAILURE, POST_CREATE_SUCCESS, POST_DELETE_FAILURE, POST_DELETE_SUCCESS, REPLY_POST_FAILURE, REPLY_POST_SUCCESS, RPOST_FAILURE, RPOST_SUCCESS, USER_LIKE_POST_FAILURE, USER_LIKE_POST_SUCCESS } from \"./ActionType\";\r\n\r\nexport const getAllPosts = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.get(\"/api/posts/\");\r\n        console.log(\"Get all posts\", data);\r\n        dispatch({ type: GET_ALL_POSTS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: GET_ALL_POSTS_FAILURE, payload: error.message });\r\n    }\r\n}\r\n\r\nexport const getUsersPost = (userId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.get(`/api/posts/user/${userId}`);\r\n        console.log(\"Get all posts\", data);\r\n        dispatch({ type: GET_USER_POSTS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: GET_USER_POSTS_FAILURE, payload: error.message });\r\n    }\r\n}\r\n\r\nexport const findPostsByLikeContainUser = (userId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.get(`/api/posts/user/${userId}/likes`);\r\n        console.log(\"Get all posts\", data);\r\n        dispatch({ type: USER_LIKE_POST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: USER_LIKE_POST_FAILURE, payload: error.message });\r\n    }\r\n}\r\n\r\nexport const findPostsById = (postId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.get(`/api/posts/${postId}`);\r\n        console.log(\"Get all posts\", data);\r\n        dispatch({ type: FIND_POST_BY_ID_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: FIND_POST_BY_ID_FAILURE, payload: error.message });\r\n    }\r\n}\r\n\r\nexport const createPost = (postData) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.post(`/api/posts/create`, postData);\r\n        console.log(\"Get all posts\", data);\r\n        dispatch({ type: POST_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: POST_CREATE_FAILURE, payload: error.message });\r\n    }\r\n}\r\n\r\n\r\nexport const createPostReply = (postData) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.post(`/api/posts/reply`, postData);\r\n        console.log(\"Get all posts\", data);\r\n        dispatch({ type: REPLY_POST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: REPLY_POST_FAILURE, payload: error.message });\r\n    }\r\n}\r\n\r\nexport const createRePost = (postId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.post(`/api/posts/${postId}/repost`);\r\n        console.log(\"Get all posts\", data);\r\n        dispatch({ type: RPOST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: RPOST_FAILURE, payload: error.message });\r\n    }\r\n}\r\n\r\nexport const likePost = (postId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.post(`/api/${postId}/like`);\r\n        console.log(\"Get all posts\", data);\r\n        dispatch({ type: LIKE_POST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: LIKE_POST_FAILURE, payload: error.message });\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.post(`/api/post/${postId}`);\r\n        console.log(\"Get all posts\", data);\r\n        dispatch({ type: POST_DELETE_SUCCESS, payload: postId });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: POST_DELETE_FAILURE, payload: error.message });\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}