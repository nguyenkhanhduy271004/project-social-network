{"ast":null,"code":"import axios from \"axios\";\nimport { API_BASE_URL } from \"../../config/api\";\nimport { GET_USER_PROFILE_USER_FAILURE, GET_USER_PROFILE_USER_SUCCESS, LOGIN_USER_FAILURE, LOGIN_USER_SUCCESS, REGISTER_USER_FAILURE, REGISTER_USER_SUCCESS } from \"./ActionType\";\nexport const loginUser = loginData => async dispatch => {\n  try {\n    const data = await axios.post(`${API_BASE_URL}/auth/login`, loginData);\n    if (data.jwt) {\n      localStorage.setItem(\"jwt\", data.jwt);\n    }\n    dispatch({\n      type: LOGIN_USER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: LOGIN_USER_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const registerUser = values => async dispatch => {\n  try {\n    const requestData = {\n      email: values.email,\n      password: values.password,\n      fullName: values.fullName,\n      birthDate: `${values.date}/${values.month}/${values.year}`\n    };\n    const response = await axios.post(`${API_BASE_URL}/auth/register`, requestData);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.error(error);\n    dispatch({\n      type: REGISTER_USER_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const getUserProfile = jwt => async dispatch => {\n  try {\n    const data = await axios.post(`${API_BASE_URL}/auth/user/profile`, {\n      headers: {\n        \"Authorization\": `Bearer ${jwt}`\n      }\n    });\n    dispatch({\n      type: GET_USER_PROFILE_USER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: GET_USER_PROFILE_USER_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","GET_USER_PROFILE_USER_FAILURE","GET_USER_PROFILE_USER_SUCCESS","LOGIN_USER_FAILURE","LOGIN_USER_SUCCESS","REGISTER_USER_FAILURE","REGISTER_USER_SUCCESS","loginUser","loginData","dispatch","data","post","jwt","localStorage","setItem","type","payload","error","console","log","message","registerUser","values","requestData","email","password","fullName","birthDate","date","month","year","response","getUserProfile","headers"],"sources":["D:/WEB/social/social-react/src/Store/Auth/Action.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { API_BASE_URL } from \"../../config/api\"\r\nimport { GET_USER_PROFILE_USER_FAILURE, GET_USER_PROFILE_USER_SUCCESS, LOGIN_USER_FAILURE, LOGIN_USER_SUCCESS, REGISTER_USER_FAILURE, REGISTER_USER_SUCCESS } from \"./ActionType\";\r\n\r\nexport const loginUser = (loginData) => async (dispatch) => {\r\n    try {\r\n        const data = await axios.post(`${API_BASE_URL}/auth/login`, loginData);\r\n\r\n        if (data.jwt) {\r\n            localStorage.setItem(\"jwt\", data.jwt);\r\n        }\r\n\r\n        dispatch({ type: LOGIN_USER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: LOGIN_USER_FAILURE, payload: error.message });\r\n    }\r\n}\r\n\r\nexport const registerUser = (values) => async (dispatch) => {\r\n    try {\r\n        const requestData = {\r\n            email: values.email,\r\n            password: values.password,\r\n            fullName: values.fullName,\r\n            birthDate: `${values.date}/${values.month}/${values.year}`\r\n        };\r\n\r\n        const response = await axios.post(`${API_BASE_URL}/auth/register`, requestData);\r\n        dispatch({ type: REGISTER_USER_SUCCESS, payload: response.data });\r\n    } catch (error) {\r\n        console.error(error);\r\n        dispatch({ type: REGISTER_USER_FAILURE, payload: error.message });\r\n    }\r\n};\r\n\r\n\r\nexport const getUserProfile = (jwt) => async (dispatch) => {\r\n    try {\r\n        const data = await axios.post(`${API_BASE_URL}/auth/user/profile`, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${jwt}`\r\n            }\r\n        });\r\n\r\n\r\n        dispatch({ type: GET_USER_PROFILE_USER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({ type: GET_USER_PROFILE_USER_FAILURE, payload: error.message });\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,6BAA6B,EAAEC,6BAA6B,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,qBAAqB,EAAEC,qBAAqB,QAAQ,cAAc;AAEjL,OAAO,MAAMC,SAAS,GAAIC,SAAS,IAAK,MAAOC,QAAQ,IAAK;EACxD,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGX,YAAY,aAAa,EAAEQ,SAAS,CAAC;IAEtE,IAAIE,IAAI,CAACE,GAAG,EAAE;MACVC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEJ,IAAI,CAACE,GAAG,CAAC;IACzC;IAEAH,QAAQ,CAAC;MAAEM,IAAI,EAAEX,kBAAkB;MAAEY,OAAO,EAAEN;IAAK,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBR,QAAQ,CAAC;MAAEM,IAAI,EAAEZ,kBAAkB;MAAEa,OAAO,EAAEC,KAAK,CAACG;IAAQ,CAAC,CAAC;EAClE;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,MAAM,IAAK,MAAOb,QAAQ,IAAK;EACxD,IAAI;IACA,MAAMc,WAAW,GAAG;MAChBC,KAAK,EAAEF,MAAM,CAACE,KAAK;MACnBC,QAAQ,EAAEH,MAAM,CAACG,QAAQ;MACzBC,QAAQ,EAAEJ,MAAM,CAACI,QAAQ;MACzBC,SAAS,EAAE,GAAGL,MAAM,CAACM,IAAI,IAAIN,MAAM,CAACO,KAAK,IAAIP,MAAM,CAACQ,IAAI;IAC5D,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMhC,KAAK,CAACY,IAAI,CAAC,GAAGX,YAAY,gBAAgB,EAAEuB,WAAW,CAAC;IAC/Ed,QAAQ,CAAC;MAAEM,IAAI,EAAET,qBAAqB;MAAEU,OAAO,EAAEe,QAAQ,CAACrB;IAAK,CAAC,CAAC;EACrE,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpBR,QAAQ,CAAC;MAAEM,IAAI,EAAEV,qBAAqB;MAAEW,OAAO,EAAEC,KAAK,CAACG;IAAQ,CAAC,CAAC;EACrE;AACJ,CAAC;AAGD,OAAO,MAAMY,cAAc,GAAIpB,GAAG,IAAK,MAAOH,QAAQ,IAAK;EACvD,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,GAAGX,YAAY,oBAAoB,EAAE;MAC/DiC,OAAO,EAAE;QACL,eAAe,EAAE,UAAUrB,GAAG;MAClC;IACJ,CAAC,CAAC;IAGFH,QAAQ,CAAC;MAAEM,IAAI,EAAEb,6BAA6B;MAAEc,OAAO,EAAEN;IAAK,CAAC,CAAC;EACpE,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBR,QAAQ,CAAC;MAAEM,IAAI,EAAEd,6BAA6B;MAAEe,OAAO,EAAEC,KAAK,CAACG;IAAQ,CAAC,CAAC;EAC7E;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}